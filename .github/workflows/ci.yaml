name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.6, 3.7, 3.8]
        # TODO(github.com/ChrisCummins/ProGraML/issues/76): TensorFlow install
        # fails on Ubuntu 20.04 using Python 3.8.
        exclude:
          - os: ubuntu-latest
            python: 3.8

    steps:
      - uses: actions/checkout@v2

      - name: "Linux: Mount bazel cache"
        uses: pat-s/always-upload-cache@v2.1.0
        with:
          path: "/home/runner/.cache/bazel"
          key: ${{ matrix.os }}-${{ matrix.python }}-bazel
        if: matrix.os == 'ubuntu-latest'

      - name: "macOS: Mount bazel cache"
        uses: pat-s/always-upload-cache@v2.1.0
        with:
          path: "/private/var/tmp/_bazel_runner"
          key: ${{ matrix.os }}-${{ matrix.python }}-bazel
        if: matrix.os == 'macos-latest'

      - name: "macOS: Install system dependencies"
        run: |
          brew install freetype pkg-config mysql-client coreutils findutils gnu-sed zlib
          echo "::add-path::/usr/local/opt/mysql-client/bin"
        if: matrix.os == 'macos-latest'

      - name: "Install conda"
        uses: conda-incubator/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: "Install conda dependencies"
        run: |
          conda install tensorflow pytorch pandas bazel

      - name: whoami
        run: ./tools/whoami.sh

      - name: Test
        run: bazel query --config=ci 'tests(//...) except attr("tags", "notravis", //...)' | xargs bazel test --config=ci

      - name: Install
        run: |
          mkdir "${GITHUB_WORKSPACE}/install"
          bazel run --config=ci //:install "${GITHUB_WORKSPACE}/install"
          echo "::add-path::${GITHUB_WORKSPACE}/install/bin"
          echo "::set-env name=LD_LIBRARY_PATH::${GITHUB_WORKSPACE}/install/lib"

      - name: Test installed binaries
        run: |
          llvm2graph --version
