xla2graph: Generate program graph from a HLO module.

Read a HloProto message from file and print the program graph to stdout.

Tensorflow, JAX, Julia, and PyTorch can all be used as XLA frontends. To
run TensorFlow using XLA and dump HloProto files, run:

  $ TF_XLA_FLAGS=--tf_xla_auto_jit=2 \
    XLA_FLAGS="--xla_dump_hlo_as_proto --xla_dump_to=/tmp/hlo" \
    path/to/your/tf/program

Then read and convert the HloProto to a ProgramGraph using:

  $ xla2graph /tmp/hlo/module_0000.before_optimizations.hlo.pb

  Flags from external/com_github_gflags_gflags/src/gflags.cc:
    -flagfile (load flags from file) type: string default: ""
    -fromenv (set flags from the environment [use 'export FLAGS_flag1=value'])
      type: string default: ""
    -tryfromenv (set flags from the environment if present) type: string
      default: ""
    -undefok (comma-separated list of flag names that it is okay to specify on
      the command line even if the program does not define a flag with that
      name.  IMPORTANT: flags in this list that have arguments MUST use the
      flag=value format) type: string default: ""

  Flags from external/com_github_gflags_gflags/src/gflags_completions.cc:
    -tab_completion_columns (Number of columns to use in output for tab
      completion) type: int32 default: 80
    -tab_completion_word (If non-empty, HandleCommandLineCompletions() will
      hijack the process and attempt to do bash-style command line flag
      completion on this value.) type: string default: ""

  Flags from external/com_github_gflags_gflags/src/gflags_reporting.cc:
    -help (show help on all flags [tip: all flags can have two dashes])
      type: bool default: false
    -helpfull (show help on all flags -- same as -help) type: bool
      default: false currently: true
    -helpmatch (show help on modules whose name contains the specified substr)
      type: string default: ""
    -helpon (show help on the modules named by this flag value) type: string
      default: ""
    -helppackage (show help on all modules in the main package) type: bool
      default: false
    -helpshort (show help on only the main module for this program) type: bool
      default: false
    -helpxml (produce an xml version of help) type: bool default: false
    -version (show version and build info and exit) type: bool default: false



  Flags from programl/util/stdin_fmt.cc:
    -stdin_fmt (The type of input format to use. Valid options are: "pbtxt"
      which reads a text format protocol buffer, "pb" which reads a binary
      format protocol buffer, or "json" which reads a JSON format protocol
      buffer.) type: string default: "pbtxt"
